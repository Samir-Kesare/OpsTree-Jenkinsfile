pipeline {
    agent any
    
    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-cred-vishal-self')
        AWS_SECRET_ACCESS_KEY = credentials('aws-cred-vishal-self')
        TF_CLI_ARGS           = '-input=false'
    }
    
    parameters {
    //     choice(name: 'ACTION', choices: ['Apply', 'Destroy'], description: 'Choose to apply or destroy the infrastructure')
            string(name: 'Wrapper_Code_Path', defaultValue: 'wrapperCode/Network-Skeleton-Wrapper-Code/Dev-Network-Skeleton-Wrapper-Code', description: 'Wrapper Code Path?')
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: 'none', url: 'https://github.com/CodeOps-Hub/Terraform-modules.git'
            }
        }
        
        // stage('Copy Terraform Files') { 
        //     steps {
        //         // Copy or move specific files from the repository to Jenkins workspace
        //         sh 'cp wrapperCode/Frontend_Wrapper_Code/Dev_Env/* .'
        //     }
        // }
        
        stage('Terraform Init') {
            steps {
                script {
                    // ${params
                    cd ${params.PATH}/
                    sh 'terraform init'
                }
            }
        }
        
        stage('Terraform Plan') {
            steps {
                script {
                    sh 'terraform plan'
                }
            }
        }
        
        stage('Review and Approve Apply') {
            when {
                expression { params.ACTION == 'Apply' }
            }
            steps {
                // Prompt for approval before applying changes
                input "Do you want to apply Terraform changes?"
            }
        }
        
        // stage('Review and Approve Destroy') {
        //     when {
        //         expression { params.ACTION == 'Destroy' }
        //     }
        //     steps {
        //         // Prompt for approval before destroying resources
        //         input "Do you want to destroy Terraform resources?"
        //     }
        // }
        
        stage('Apply or Destroy') {
            steps {
                script {
                    // if (params.ACTION == 'Apply') {
                        sh 'terraform apply -auto-approve'
                    // } else if (params.ACTION == 'Destroy') {
                        // sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }
    
     post {
        success {
                echo "Changes Applied Successfully"
        }
        failure {
            echo 'Terraform operation failed!'
        }
    }
// }
