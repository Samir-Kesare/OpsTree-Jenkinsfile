pipeline {
    agent any
    parameters {
        choice (choices: ['apply', 'destroy'], name: 'ACTION', description: 'Choose terraform ACTION to perform')
        string (defaultValue: 'wrapperCode/Network-Skeleton-Wrapper-Code/Dev-Network-Skeleton-Wrapper-Code', description: 'define path of wrapper code directory', name: 'WrapperPath')
    }

    stages {
        stage('git checkout') {
              steps {
                checkout scmGit(branches: [[name: 'main']], extensions: [], userRemoteConfigs: [[credentialsId: 'Harshit-Github-PAT', url: 'https://github.com/CodeOps-Hub/Terraform-modules.git']])
              }
        }
        stage('Terraform init') {
            steps {
                // script{
                    sh "terraform -chdir='${params.WrapperPath}' init"                    
                //  }
                
            }
        }
        stage('Terraform plan') {
            steps {
                withAWS(credentials: 'HARSHIT_AWS_CREDS') {
                    script{
                        sh "terraform -chdir='${params.WrapperPath}' plan"                    
                    }
                }
            }
        }
        stage('Apply Approval') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                input 'Do you want to apply Terraform plan?'
            }
        }
        stage('Destroy Approval') {
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps {
                input 'Do you want to perform Terraform destroy?'
            }
        }
        stage('Terraform apply or destroy') {
            steps {
                withAWS(credentials: 'HARSHIT_AWS_CREDS') {
                    script{
                        if (params.ACTION == 'apply') {
                            sh "terraform -chdir='${params.WrapperPath}' apply --auto-approve"
                        } 
                        else if (params.ACTION == 'destroy') {
                            sh "terraform -chdir='${params.WrapperPath}' destroy --auto-approve"
                        }
                    }
                }
            }
        }

    }
}
