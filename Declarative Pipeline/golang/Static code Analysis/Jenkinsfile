pipeline {
    agent any

    tools {
        // Use pre-installed Go version if available
        // Install 'Go' tool only if needed
        go 'go1.22.0' // Adjust version as needed
    }

    stages {
        stage('Checkout') {
            steps {
                // Use credentials if necessary
                git branch: 'main', credentialsId: 'khushi09', url: 'https://github.com/OT-MyGurukulam/employee-api.git'
            }
        }

        stage('Build') {
            steps {
                // Build your GoLang code
                sh 'go build'
            }
        }

        stage('Install gosec (Optimized)') {
            steps {
                script {
                    // Check if gosec already exists in PATH
                    if (!sh(returnStdout: true, script: 'which gosec').trim()) {
                        // Download to temporary directory
                        def gosecTempDir = '/tmp/gosec-install'
                        sh "mkdir -p ${gosecTempDir}"
                        sh "wget -O ${gosecTempDir}/gosec https://github.com/securego/gosec/releases/download/v2.18.2/gosec_linux_amd64"

                        // Set up permissions and add to PATH
                        sh "chmod +x ${gosecTempDir}/gosec"
                        sh "sudo mv ${gosecTempDir}/gosec /usr/local/bin/"

                        // Verify installation
                        sh 'gosec --version'
                    }
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                // Use tool step for better integration
                tool name: 'gosec'
                sh 'gosec -fmt json ./...' // Adjust paths as needed

                // Publish results with better formatting
                publishJunit testsFileName: 'gosec-report.json', className: 'gosec'
            }
        }
    }
}














